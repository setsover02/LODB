// !compileOnSave
// compileOnSave: false

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Webkit only
@mixin text-overflow-multi() {
  word-wrap: break-word;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4; // line count, change this
}

// clearfix
@mixin clearfix() {
  &:after,
  &:before {
    content: " "; // 1
    display: table; // 2
  }

  &:after {
    clear: both;
  }
}
@mixin gradient ($range, $baseColor, $sideColor) {
  background: $baseColor;
  background: -webkit-linear-gradient($range, $baseColor, $sideColor) !important;
  background: -moz-linear-gradient($range, $baseColor, $sideColor) !important;
  background: -ms-linear-gradient($range, $baseColor, $sideColor) !important;
  background: -o-linear-gradient($range, $baseColor, $sideColor) !important;
  background: linear-gradient($range, $baseColor, $sideColor) !important;
}

@mixin radial-gradient ($range, $baseColor, $sideColor) {
  background: $baseColor;
  background: -webkit-radial-gradient($range, $baseColor, $sideColor) !important;
  background: -moz-radial-gradient($range, $baseColor, $sideColor) !important;
  background: -ms-radial-gradient($range, $baseColor, $sideColor) !important;
  background: -o-radial-gradient($range, $baseColor, $sideColor) !important;
  background: radial-gradient($range, $baseColor, $sideColor) !important;
}

// Vendor prefixes
// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Object
// - Placeholder text
// - Transformations
// - Transitions
// - User Select
// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
  -o-animation: $animation;
  animation: $animation;
}
@mixin animation-name($name) {
  -webkit-animation-name: $name;
  animation-name: $name;
}
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
  animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
  animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
  animation-direction: $direction;
}
@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
  animation-fill-mode: $fill-mode;
}
// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}
// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}
// mutiple box-shadow
@mixin multi-shadow($shadow1, $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
  $params: $shadow1;
  @if $shadow2 {
    $params: $shadow1, $shadow2;
  }
  @if $shadow3 != false {
    $params: $shadow1, $shadow2, $shadow3;
  }
  @if $shadow4 != false {
    $params: $shadow1, $shadow2, $shadow3, $shadow4;
  }
  @if $shadow5 != false {
    $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5;
  }
  -webkit-box-shadow: $params !important;
  -moz-box-shadow: $params !important;
  box-shadow: $params !important;
}
// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}
// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
  -webkit-column-count: $column-count;
  -moz-column-count: $column-count;
  column-count: $column-count;
  -webkit-column-gap: $column-gap;
  -moz-column-gap: $column-gap;
  column-gap: $column-gap;
}
// Flex
@mixin flex-box() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: -moz-flex;
  display: flex;
}
@mixin inline-flex() {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: -moz-inline-flex;
  display: inline-flex;
}
@mixin flex-inline($value) {
  -webkit-inline-flex: $value;
  -moz-inline-flex: $value;
  -ms-inline-flex: $value;
  inline-flex: $value;
}
@mixin flex($value : 1) {
  -webkit-box-flex: $value;
  -moz-box-flex: $value;
  -webkit-flex: $value;
  -moz-flex: $value;
  -ms-flex: $value;
  flex: $value;
}
@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else
  if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else
  if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}
@mixin flex-basis($value : auto) {
  -webkit-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  -moz-flex-basis: $value;
  flex-basis: $value;
}
@mixin flex-flow($values: (row nowrap)) {
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}
@mixin flex-grow($value : 0) {
  -webkit-box-flex: $value;
  -webkit-flex-grow: $value;
  -ms-flex-positive: $value;
  -moz-flex-grow: $value;
  flex-grow: $value;
}
@mixin flex-shrink($value) {
  -webkit-flex-shrink: $value;
  -moz-flex-shrink: $value;
  flex-shrink: $value;
}
@mixin flex-wrap($value: nowrap) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}
@mixin order($value : 1) {
  -webkit-box-ordinal-group: $value + 1;
  -webkit-order: $value;
  -ms-flex-order: $value;
  -moz-order: $value;
  order: $value;
}
// alias order()
@mixin flex-order($args...) {
  @include order($args...);
}
// flow
@mixin flow-into($value) {
  -webkit-flow-into: $value;
  -moz-flow-into: $value;
  -ms-flow-into: $value;
  flow-into: $value;
}
@mixin flow-from($value) {
  -webkit-flow-from: $value;
  -moz-flow-from: $value;
  -ms-flow-from: $value;
  flow-from: $value;
}
@mixin align-content($value: stretch) {
  -webkit-align-content: $value;
  -moz-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else
  if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}
@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else
  if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}
@mixin align-self($value: auto) {
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else
  if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}
@mixin justify-content($value : flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else
  if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else
  if $value == space-around {
    -ms-flex-pack: distribute;
  } @else
  if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}
// alias justify-content
@mixin flex-justify($args...) {
  @include justify-content($args...);
}
// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
  -moz-hyphens: $mode;
  -ms-hyphens: $mode; // IE10+
  -o-hyphens: $mode;
  hyphens: $mode;
}
// Object
@mixin object-fit($fit) {
  -o-objecet-fit: $fit;
  object-fit: $fit;
}
@mixin object-position($position) {
  -o-objecet-position: $position;
  object-position: $position;
}
// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }

  &:-ms-input-placeholder {
    color: $color;
  }
  // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: $color;
  }
  // Safari and Chrome
}
// Transformations
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
  -ms-transform: scale($ratio); // IE9 only
  -o-transform: scale($ratio);
  transform: scale($ratio);
}
@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
  -ms-transform: scaleX($ratio); // IE9 only
  -o-transform: scaleX($ratio);
  transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
  -ms-transform: scaleY($ratio); // IE9 only
  -o-transform: scaleY($ratio);
  transform: scaleY($ratio);
}
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  -o-transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y); // IE9 only
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}
@mixin translateX($y, $percent, $pixel) {
  -webkit-transform: translateY($y) translateX($percent) translateX($pixel);
  -ms-transform: translateY($y) translateX($percent) translateX($pixel);
  -o-transform: translateY($y) translateX($percent) translateX($pixel);
  transform: translateY($y) translateX($percent) translateX($pixel);
}
@mixin translateY($x, $percent, $pixel) {
  -webkit-transform: translateX($x) translateY($percent) translateY($pixel);
  -ms-transform: translateX($x) translateY($percent) translateY($pixel);
  -o-transform: translateX($x) translateY($percent) translateY($pixel);
  transform: translateX($x) translateY($percent) translateY($pixel);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees); // IE9 only
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
  -ms-transform: rotateX($degrees); // IE9 only
  -o-transform: rotateX($degrees);
  transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
  -ms-transform: rotateY($degrees); // IE9 only
  -o-transform: rotateY($degrees);
  transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin; // IE9 only
  transform-origin: $origin;
}
// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}
@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
  transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
  transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}
// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select; // IE10+
  user-select: $select;
}
